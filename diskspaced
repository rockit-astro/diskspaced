#!/usr/bin/env python3
#
# This file is part of superwaspd.
#
# superwaspd is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# superwaspd is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with superwaspd.  If not, see <http://www.gnu.org/licenses/>.

# pylint: disable=broad-except
# pylint: disable=too-few-public-methods
# pylint: disable=no-self-use

"""Front end for tcs disk usage of the Warwick one-metre telescope"""

import datetime
import os
import Pyro4

PYRO_HOST = '192.168.0.101'
PYRO_PORT = 9008
PYRO_NAME = 'diskspace_daemon'

# Filesystem to monitor
DATA_FILESYSTEM = '/'

class DiskUsageDaemon:
    """Responds to disk usage queries"""
    def last_measurement(self):
        """Query the latest valid measurement.
        May return None if no data is available"""
        now = datetime.datetime.utcnow
        try:
            date = now()
            data = os.statvfs(DATA_FILESYSTEM)
            data_available = data.f_frsize * data.f_bavail
            data_total = data.f_frsize * data.f_blocks
            data_percent = round(data_available * 100 / data_total)

            return {
                'date': date.strftime('%Y-%m-%dT%H:%M:%SZ'),
                'data_fs_available_bytes': data_available,
                'data_fs_total_bytes': data_total,
                'data_fs_percent_available': data_percent,
            }

        except Exception as exception:
            print('{} ERROR: failed to query disk usage: {}' \
                  .format(datetime.datetime.utcnow(), str(exception)))
            return None

def spawn_daemon():
    """Spawns the daemon and registers it with Pyro"""
    Pyro4.config.COMMTIMEOUT = 5

    pyro = Pyro4.Daemon(host=PYRO_HOST, port=PYRO_PORT)
    diskspace = DiskUsageDaemon()
    uri = pyro.register(diskspace, objectId=PYRO_NAME)

    print('Starting disk usage daemon with Pyro ID:', uri)
    pyro.requestLoop()
    print('Stopping disk usage daemon with Pyro ID:', uri)

if __name__ == '__main__':
    spawn_daemon()
